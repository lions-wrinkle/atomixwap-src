"use strict";(self.webpackChunkatomic_swap=self.webpackChunkatomic_swap||[]).push([[644],{644:(t,s,e)=>{e.r(s),e.d(s,{Claim:()=>c});var a=e(4050),i=e.n(a),n=e(9182),l=e(2592);class r{constructor(t,s){this.API_URL=n.Z.urls[n.Z.network].claimApiUrl,this.walletConnect=t,this.algodClient=s,this.claimables,this.suggestedParams,this.escrowAddress}async load(){try{const t=await fetch(this.API_URL+"/claim/get?recipient="+this.walletConnect.walletAddress),s=await t.json();this.claimables=s.claimables,this.suggestedParams=s.suggestedParams,this.escrowAddress=s.escrowAddress;for(const t of this.claimables){const s=await this.algodClient.getAssetByID(t.assetId).do();t.params=s.params}}catch(t){return console.error(t),void alert(t.message)}}getClaimablesUI(){let t=0,s=[];const e=document.createElement("div");let a,i,n=0;for(const r of this.claimables){0===t&&(a=document.createElement("div"),a.className="mt-4 mb-1",e.append(a),i=i=document.createElement("div"),i.className="row text-center gx-2 gy-2 mb-3",a.append(i));const c=document.createElement("div");if(c.className="col-6 col-md-3",c.innerHTML=`<div class="h-100 nft-card"><img src="default.png" class="img-fluid" id="nft-${r.assetId}"><div class="nft-card-info"><strong>${r.params.name}</strong><br>\n      <small><a href="https://www.nftexplorer.app/asset/${r.assetId}" target="_blank">${r.assetId}</a></small></div></div>`,(0,l.g)(r.assetId,c.querySelector(`#nft-${r.assetId}`),400),s.push(r.assetId),i.append(c),t++,n===this.claimables.length-1||2===t){const e=document.createElement("button");e.className="btn btn-generate",e.textContent="Claim "+(t>1?`(${t})`:""),e.dataset.assetIds=s.join(","),e.addEventListener("click",this.claim.bind(this),!1),a.append(e),t=0,s=[]}n++}return e}async claim(t){const s=t.currentTarget;try{s.innerHTML='<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n      Waiting for signatures...',s.disabled=!0;const e=t.currentTarget.dataset.assetIds.split(",");let a=[],n=[];for(const t of e){let s=i().makeAssetTransferTxnWithSuggestedParamsFromObject({from:this.walletConnect.walletAddress,to:this.walletConnect.walletAddress,amount:0,assetIndex:parseInt(t),suggestedParams:this.suggestedParams});a.push(s);let e=i().makeAssetTransferTxnWithSuggestedParamsFromObject({from:this.escrowAddress,to:this.walletConnect.walletAddress,amount:1,assetIndex:parseInt(t),suggestedParams:this.suggestedParams});n.push(e)}let l=a.concat(n);i().assignGroupID(l);const r=(await this.walletConnect.signTransactions(l)).map((t=>btoa(String.fromCharCode.apply(null,t))));s.innerHTML='<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n      Claiming...',s.disabled=!0;const c=await fetch(this.API_URL+"/claim/claim",{method:"POST",body:JSON.stringify({signedTxns:r}),headers:{Accept:"application/json","Content-Type":"application/json"}});if(200!==c.status){const t=await c.json();throw new Error(t.error)}await c.json(),s.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">\n        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>\n      </svg>\n        Claimed',s.disabled=!0}catch(t){console.error(t),alert(t.message),s.textContent="Claim",s.disabled=!1}}}class c{constructor(t,s){this.walletConnect=t,this.algodClient=s,this.ui=document.createElement("div"),this.claimApi=new r(this.walletConnect,this.algodClient),this.displayUI(),this.loadClaimables()}displayUI(){this.ui.innerHTML='\n        <h4 id="claim-title">Claim</h4>\n        <div id="claim-list">Loading...</div>\n        '}async loadClaimables(){await this.claimApi.load();const t=this.ui.querySelector("#claim-title"),s=this.ui.querySelector("#claim-list"),e=this.claimApi.claimables.length;0===e?(t.textContent="ðŸ˜ž",s.textContent="No NFTS to claim."):(t.textContent=`${e} NFT${e>1?"s":""} to claim! ðŸ¥³`,s.textContent="",s.append(this.claimApi.getClaimablesUI()))}}}}]);