"use strict";(self.webpackChunkatomixwap=self.webpackChunkatomixwap||[]).push([[948],{1948:(e,t,s)=>{s.r(t),s.d(t,{SwapLinkForm:()=>r});var i=s(4050),a=s.n(i),n=s(2592);class r{constructor(e,t,s,i,a){this.ui=document.createElement("div"),this.defaultRoyalties=t,this.submitCallback=s,this.walletConnect=i,this.algoIndexer=a,this.data={},this.isAssetCreator=!1,this.ui.innerHTML=`<h4>Create swap link</h4>\n        <form>\n                    <div class="mb-3">\n                        <div class="row">\n                            <div class="col-6">\n                              <label for="inputAssetId" class="form-label">NFT</label>\n                              <input type="text" class="form-control" id="inputAssetId" aria-describedby="assetIdHelp"\n                                  pattern="\\d*" required>\n                              <div id="assetIdHelp" class="form-text">ASA asset ID</div>\n                            </div>\n                            <div class="col-6">\n                              <img src="default.png" id="imgAssetPreview" width="auto" height="95">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="mb-3">\n                        <label for="inputAlgoAddress" class="form-label">Receiver</label>\n                        <input type="text" class="form-control" id="inputAlgoAddress" pattern="[A-Z2-7]{58}"\n                            aria-describedby="AlgoAddressdHelp" required>\n                        <div id="AlgoAddressdHelp" class="form-text">Algorand Wallet Address</div>\n                    </div>\n                    <div class="mb-3">\n                        <label for="inputPrice" class="form-label">Price</label>\n\n                        <div class="row">\n                            <div class="col">\n                                <input type="number" class="form-control" id="inputPrice" min="0" step="1" required>\n                            </div>\n                            <div class="col">\n                                <select class="form-select" id="inputCurrency" aria-label="Select currency">\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="mb-3">\n                      <div class="row">\n                        <div class="col-6">\n                          <div class="d-flex justify-content-between">\n                          <label for="inputRoyalties" class="form-label">Creator royalty</label>\n                          <span id="royaltiesValueLabel" class="royalties">0&percnt;</span>\n                      </div>\n\n                      <input type="range" class="form-range" value="${this.defaultRoyalties}" min="0" max="10" step="0.5" id="inputRoyalties"\n                          aria-describedby="royaltiesdHelp">\n                      <div id="royaltiesdHelp" class="form-text"></div>\n                        </div>\n                        <div class="col-6 position-relative">\n                        <span class="position-absolute heart" id="royaltiesLoveRed" hidden>&#10084;</span>\n                        <span class="position-absolute heart" id="royaltiesLoveGreen">&#128154;</span>\n                        \n                        </div>\n                      </div>\n                       \n                    </div>\n                    <div class="mb-3 form-check">\n                        <input type="checkbox" class="form-check-input" id="checkAcceptRisk" required>\n                        <label class="form-check-label" for="checkAcceptRisk">I accept to use this tool at my own\n                            risk</label>\n                    </div>\n                    <button type="submit" id="buttonSubmit" class="btn btn-generate fw-bold">Preview</button>\n\n\n                </form>`;const n=this.ui.querySelector("#inputCurrency");let r=!0;for(const t of e){const e=document.createElement("option");e.textContent=t.name,e.value=t.assetId,r&&(e.selected=!0),n.append(e),r=!1}this.ui.querySelector("#inputRoyalties").addEventListener("input",this.royaltiesChange.bind(this),!1),this.ui.querySelector("#inputAssetId").addEventListener("focusout",this.assetIdFocusOut.bind(this),!1),this.ui.querySelector("#inputCurrency").addEventListener("change",this.currencyChange.bind(this),!1),this.ui.querySelector("form").addEventListener("submit",this.submitForm.bind(this),!1),this.ui.querySelector("#inputRoyalties").dispatchEvent(new Event("input"))}async assetIdFocusOut(e){const t=this.ui.querySelector("#assetIdHelp"),s=this.ui.querySelector("#inputAssetId"),i=this.ui.querySelector("#inputRoyalties"),a=this.ui.querySelector("#royaltiesdHelp"),r=parseInt(s.value);if(isNaN(r))t.innerHTML='<span class="text-danger">Wrong asset ID format</span>',i.disabled=!1,a.textContent="";else{try{const e=await this.algoIndexer.lookupAssetByID(r).do();t.innerHTML=`<span class="text-success">${e.asset.params.name} (${e.asset.params["unit-name"]})</span>`,e.asset.params.creator===this.walletConnect.walletAddress?this.isAssetCreator=!0:this.isAssetCreator=!1}catch(e){console.log(e),t.innerHTML=`<span class="text-danger">Error: Asset with ID ${r} not found</span>`,this.isAssetCreator=!1}this.checkRoyaltiesAvailability(),(0,n.g)(r,this.ui.querySelector("#imgAssetPreview"),200)}}currencyChange(e){this.checkRoyaltiesAvailability()}checkRoyaltiesAvailability(){const e=this.ui.querySelector("#inputCurrency"),t=this.ui.querySelector("#inputRoyalties"),s=this.ui.querySelector("#royaltiesdHelp"),i=this.ui.querySelector("#royaltiesLoveGreen"),a=this.ui.querySelector("#royaltiesLoveRed");"algo"!==e.value||this.isAssetCreator?(t.value=0,t.disabled=!0,"algo"!==e.value?s.textContent="Royalty not available for other token than Algo":s.textContent="You're the creator of this asset, royalty disabled.",i.hidden=!0,a.hidden=!0):(t.disabled=!1,s.textContent="",i.hidden=!1),t.dispatchEvent(new Event("input"))}royaltiesChange(e){const t=this.ui.querySelector("#inputRoyalties");this.ui.querySelector("#royaltiesValueLabel").textContent=`${t.value} %`;const s=this.ui.querySelector("#royaltiesLoveGreen"),i=this.ui.querySelector("#royaltiesLoveRed"),a=Number(t.min),n=Number(t.max),r=1+(t.value-t.min)/(t.max-t.min)*3.5;if(s.style=`font-size: ${r}rem`,t.value>a+(n-a)/2){const e=(t.value-(a+(n-a)/2))/((n-a)/2);let l="";t.value===t.max&&(l="animation: animateHeart 1.2s infinite;"),i.hidden=!1,i.style=`font-size: ${r}rem; ${l}`,s.style=`font-size: ${r}rem; opacity: ${1-e}`}else i.hidden=!0}async validate(){if(await this.assetIdFocusOut(),this.data.assetId=this.ui.querySelector("#inputAssetId").value,this.data.buyerAddress=this.ui.querySelector("#inputAlgoAddress").value,this.data.price=this.ui.querySelector("#inputPrice").value,this.data.currency=this.ui.querySelector("#inputCurrency").value,this.data.royaltiesPercent=this.ui.querySelector("#inputRoyalties").value,this.data.acceptRisk=this.ui.querySelector("#checkAcceptRisk").checked,isNaN(this.data.assetId))throw new Error("Asset ID is not a number");if(!a().isValidAddress(this.data.buyerAddress))throw new Error("Alogorand wallet address is not valid");if(isNaN(this.data.price))throw new Error("Price is not a number");if(isNaN(this.data.royaltiesPercent))throw new Error("Royalties value is not a number");if(!this.data.acceptRisk)throw new Error("Risk not accepted")}async submitForm(e){e.preventDefault();try{await this.validate()}catch(e){alert(e)}this.submitCallback&&this.submitCallback(this)}makeBusy(){const e=this.ui.querySelector("#buttonSubmit");e.disabled=!0,e.innerHTML='<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n    Preview'}stopBusy(){const e=this.ui.querySelector("#buttonSubmit");e.textContent="Preview",e.disabled=!1}}}}]);